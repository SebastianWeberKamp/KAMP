/**
 */
package edu.kit.ipd.sdq.kamp4is.model.modificationmarks.provider;

import edu.kit.ipd.sdq.kamp4is.model.modificationmarks.util.ISModificationmarksAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class ISModificationmarksItemProviderAdapterFactory extends ISModificationmarksAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ISModificationmarksItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISModificationRepository} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ISModificationRepositoryItemProvider isModificationRepositoryItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISModificationRepository}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createISModificationRepositoryAdapter() {
		if (isModificationRepositoryItemProvider == null) {
			isModificationRepositoryItemProvider = new ISModificationRepositoryItemProvider(this);
		}

		return isModificationRepositoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISSeedModifications} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ISSeedModificationsItemProvider isSeedModificationsItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISSeedModifications}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createISSeedModificationsAdapter() {
		if (isSeedModificationsItemProvider == null) {
			isSeedModificationsItemProvider = new ISSeedModificationsItemProvider(this);
		}

		return isSeedModificationsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISChangePropagationDueToDataDependencies} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ISChangePropagationDueToDataDependenciesItemProvider isChangePropagationDueToDataDependenciesItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISChangePropagationDueToDataDependencies}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createISChangePropagationDueToDataDependenciesAdapter() {
		if (isChangePropagationDueToDataDependenciesItemProvider == null) {
			isChangePropagationDueToDataDependenciesItemProvider = new ISChangePropagationDueToDataDependenciesItemProvider(this);
		}

		return isChangePropagationDueToDataDependenciesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISChangePropagationDueToInterfaceDependencies} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ISChangePropagationDueToInterfaceDependenciesItemProvider isChangePropagationDueToInterfaceDependenciesItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISChangePropagationDueToInterfaceDependencies}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createISChangePropagationDueToInterfaceDependenciesAdapter() {
		if (isChangePropagationDueToInterfaceDependenciesItemProvider == null) {
			isChangePropagationDueToInterfaceDependenciesItemProvider = new ISChangePropagationDueToInterfaceDependenciesItemProvider(this);
		}

		return isChangePropagationDueToInterfaceDependenciesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISIntercomponentPropagation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ISIntercomponentPropagationItemProvider isIntercomponentPropagationItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISIntercomponentPropagation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createISIntercomponentPropagationAdapter() {
		if (isIntercomponentPropagationItemProvider == null) {
			isIntercomponentPropagationItemProvider = new ISIntercomponentPropagationItemProvider(this);
		}

		return isIntercomponentPropagationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISIntracomponentPropagation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ISIntracomponentPropagationItemProvider isIntracomponentPropagationItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISIntracomponentPropagation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createISIntracomponentPropagationAdapter() {
		if (isIntracomponentPropagationItemProvider == null) {
			isIntracomponentPropagationItemProvider = new ISIntracomponentPropagationItemProvider(this);
		}

		return isIntracomponentPropagationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISModifyDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ISModifyDataTypeItemProvider isModifyDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISModifyDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createISModifyDataTypeAdapter() {
		if (isModifyDataTypeItemProvider == null) {
			isModifyDataTypeItemProvider = new ISModifyDataTypeItemProvider(this);
		}

		return isModifyDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISModifyComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ISModifyComponentItemProvider isModifyComponentItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISModifyComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createISModifyComponentAdapter() {
		if (isModifyComponentItemProvider == null) {
			isModifyComponentItemProvider = new ISModifyComponentItemProvider(this);
		}

		return isModifyComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISModifyConnector} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ISModifyConnectorItemProvider isModifyConnectorItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISModifyConnector}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createISModifyConnectorAdapter() {
		if (isModifyConnectorItemProvider == null) {
			isModifyConnectorItemProvider = new ISModifyConnectorItemProvider(this);
		}

		return isModifyConnectorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISModifyRole} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ISModifyRoleItemProvider isModifyRoleItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISModifyRole}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createISModifyRoleAdapter() {
		if (isModifyRoleItemProvider == null) {
			isModifyRoleItemProvider = new ISModifyRoleItemProvider(this);
		}

		return isModifyRoleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISModifyProvidedRole} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ISModifyProvidedRoleItemProvider isModifyProvidedRoleItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISModifyProvidedRole}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createISModifyProvidedRoleAdapter() {
		if (isModifyProvidedRoleItemProvider == null) {
			isModifyProvidedRoleItemProvider = new ISModifyProvidedRoleItemProvider(this);
		}

		return isModifyProvidedRoleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISModifyRequiredRole} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ISModifyRequiredRoleItemProvider isModifyRequiredRoleItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISModifyRequiredRole}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createISModifyRequiredRoleAdapter() {
		if (isModifyRequiredRoleItemProvider == null) {
			isModifyRequiredRoleItemProvider = new ISModifyRequiredRoleItemProvider(this);
		}

		return isModifyRequiredRoleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISModifyInterface} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ISModifyInterfaceItemProvider isModifyInterfaceItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISModifyInterface}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createISModifyInterfaceAdapter() {
		if (isModifyInterfaceItemProvider == null) {
			isModifyInterfaceItemProvider = new ISModifyInterfaceItemProvider(this);
		}

		return isModifyInterfaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISModifySignature} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ISModifySignatureItemProvider isModifySignatureItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4is.model.modificationmarks.ISModifySignature}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createISModifySignatureAdapter() {
		if (isModifySignatureItemProvider == null) {
			isModifySignatureItemProvider = new ISModifySignatureItemProvider(this);
		}

		return isModifySignatureItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (isModificationRepositoryItemProvider != null) isModificationRepositoryItemProvider.dispose();
		if (isSeedModificationsItemProvider != null) isSeedModificationsItemProvider.dispose();
		if (isChangePropagationDueToDataDependenciesItemProvider != null) isChangePropagationDueToDataDependenciesItemProvider.dispose();
		if (isChangePropagationDueToInterfaceDependenciesItemProvider != null) isChangePropagationDueToInterfaceDependenciesItemProvider.dispose();
		if (isIntercomponentPropagationItemProvider != null) isIntercomponentPropagationItemProvider.dispose();
		if (isIntracomponentPropagationItemProvider != null) isIntracomponentPropagationItemProvider.dispose();
		if (isModifyDataTypeItemProvider != null) isModifyDataTypeItemProvider.dispose();
		if (isModifyComponentItemProvider != null) isModifyComponentItemProvider.dispose();
		if (isModifyConnectorItemProvider != null) isModifyConnectorItemProvider.dispose();
		if (isModifyRoleItemProvider != null) isModifyRoleItemProvider.dispose();
		if (isModifyProvidedRoleItemProvider != null) isModifyProvidedRoleItemProvider.dispose();
		if (isModifyRequiredRoleItemProvider != null) isModifyRequiredRoleItemProvider.dispose();
		if (isModifyInterfaceItemProvider != null) isModifyInterfaceItemProvider.dispose();
		if (isModifySignatureItemProvider != null) isModifySignatureItemProvider.dispose();
	}

}
