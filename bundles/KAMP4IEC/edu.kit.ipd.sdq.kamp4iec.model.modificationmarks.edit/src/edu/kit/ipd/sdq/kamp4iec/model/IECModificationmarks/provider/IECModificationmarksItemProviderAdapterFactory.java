/**
 */
package edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.provider;

import edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.util.IECModificationmarksAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class IECModificationmarksItemProviderAdapterFactory extends IECModificationmarksAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public IECModificationmarksItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECModificationRepository} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IECModificationRepositoryItemProvider iecModificationRepositoryItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECModificationRepository}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIECModificationRepositoryAdapter() {
		if (iecModificationRepositoryItemProvider == null) {
			iecModificationRepositoryItemProvider = new IECModificationRepositoryItemProvider(this);
		}

		return iecModificationRepositoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECSeedModifications} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IECSeedModificationsItemProvider iecSeedModificationsItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECSeedModifications}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIECSeedModificationsAdapter() {
		if (iecSeedModificationsItemProvider == null) {
			iecSeedModificationsItemProvider = new IECSeedModificationsItemProvider(this);
		}

		return iecSeedModificationsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECChangePropagationDueToDataDependency} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IECChangePropagationDueToDataDependencyItemProvider iecChangePropagationDueToDataDependencyItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECChangePropagationDueToDataDependency}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIECChangePropagationDueToDataDependencyAdapter() {
		if (iecChangePropagationDueToDataDependencyItemProvider == null) {
			iecChangePropagationDueToDataDependencyItemProvider = new IECChangePropagationDueToDataDependencyItemProvider(this);
		}

		return iecChangePropagationDueToDataDependencyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECModifyComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IECModifyComponentItemProvider iecModifyComponentItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECModifyComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIECModifyComponentAdapter() {
		if (iecModifyComponentItemProvider == null) {
			iecModifyComponentItemProvider = new IECModifyComponentItemProvider(this);
		}

		return iecModifyComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECModifyGlobalVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IECModifyGlobalVariableItemProvider iecModifyGlobalVariableItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECModifyGlobalVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIECModifyGlobalVariableAdapter() {
		if (iecModifyGlobalVariableItemProvider == null) {
			iecModifyGlobalVariableItemProvider = new IECModifyGlobalVariableItemProvider(this);
		}

		return iecModifyGlobalVariableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECModifyFunctionBlock} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IECModifyFunctionBlockItemProvider iecModifyFunctionBlockItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECModifyFunctionBlock}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIECModifyFunctionBlockAdapter() {
		if (iecModifyFunctionBlockItemProvider == null) {
			iecModifyFunctionBlockItemProvider = new IECModifyFunctionBlockItemProvider(this);
		}

		return iecModifyFunctionBlockItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECModifyFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IECModifyFunctionItemProvider iecModifyFunctionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECModifyFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIECModifyFunctionAdapter() {
		if (iecModifyFunctionItemProvider == null) {
			iecModifyFunctionItemProvider = new IECModifyFunctionItemProvider(this);
		}

		return iecModifyFunctionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECModifyInterface} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IECModifyInterfaceItemProvider iecModifyInterfaceItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECModifyInterface}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIECModifyInterfaceAdapter() {
		if (iecModifyInterfaceItemProvider == null) {
			iecModifyInterfaceItemProvider = new IECModifyInterfaceItemProvider(this);
		}

		return iecModifyInterfaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECModifyMethod} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IECModifyMethodItemProvider iecModifyMethodItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECModifyMethod}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIECModifyMethodAdapter() {
		if (iecModifyMethodItemProvider == null) {
			iecModifyMethodItemProvider = new IECModifyMethodItemProvider(this);
		}

		return iecModifyMethodItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECModifyAbstractMethod} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IECModifyAbstractMethodItemProvider iecModifyAbstractMethodItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECModifyAbstractMethod}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIECModifyAbstractMethodAdapter() {
		if (iecModifyAbstractMethodItemProvider == null) {
			iecModifyAbstractMethodItemProvider = new IECModifyAbstractMethodItemProvider(this);
		}

		return iecModifyAbstractMethodItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECModifyProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IECModifyPropertyItemProvider iecModifyPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECModifyProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIECModifyPropertyAdapter() {
		if (iecModifyPropertyItemProvider == null) {
			iecModifyPropertyItemProvider = new IECModifyPropertyItemProvider(this);
		}

		return iecModifyPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECModifyAbstractProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IECModifyAbstractPropertyItemProvider iecModifyAbstractPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECModifyAbstractProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIECModifyAbstractPropertyAdapter() {
		if (iecModifyAbstractPropertyItemProvider == null) {
			iecModifyAbstractPropertyItemProvider = new IECModifyAbstractPropertyItemProvider(this);
		}

		return iecModifyAbstractPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECModifyProgram} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IECModifyProgramItemProvider iecModifyProgramItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECModifyProgram}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIECModifyProgramAdapter() {
		if (iecModifyProgramItemProvider == null) {
			iecModifyProgramItemProvider = new IECModifyProgramItemProvider(this);
		}

		return iecModifyProgramItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECModifyConfiguration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IECModifyConfigurationItemProvider iecModifyConfigurationItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4iec.model.IECModificationmarks.IECModifyConfiguration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIECModifyConfigurationAdapter() {
		if (iecModifyConfigurationItemProvider == null) {
			iecModifyConfigurationItemProvider = new IECModifyConfigurationItemProvider(this);
		}

		return iecModifyConfigurationItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (iecModificationRepositoryItemProvider != null) iecModificationRepositoryItemProvider.dispose();
		if (iecSeedModificationsItemProvider != null) iecSeedModificationsItemProvider.dispose();
		if (iecChangePropagationDueToDataDependencyItemProvider != null) iecChangePropagationDueToDataDependencyItemProvider.dispose();
		if (iecModifyComponentItemProvider != null) iecModifyComponentItemProvider.dispose();
		if (iecModifyGlobalVariableItemProvider != null) iecModifyGlobalVariableItemProvider.dispose();
		if (iecModifyFunctionBlockItemProvider != null) iecModifyFunctionBlockItemProvider.dispose();
		if (iecModifyFunctionItemProvider != null) iecModifyFunctionItemProvider.dispose();
		if (iecModifyInterfaceItemProvider != null) iecModifyInterfaceItemProvider.dispose();
		if (iecModifyMethodItemProvider != null) iecModifyMethodItemProvider.dispose();
		if (iecModifyAbstractMethodItemProvider != null) iecModifyAbstractMethodItemProvider.dispose();
		if (iecModifyPropertyItemProvider != null) iecModifyPropertyItemProvider.dispose();
		if (iecModifyAbstractPropertyItemProvider != null) iecModifyAbstractPropertyItemProvider.dispose();
		if (iecModifyProgramItemProvider != null) iecModifyProgramItemProvider.dispose();
		if (iecModifyConfigurationItemProvider != null) iecModifyConfigurationItemProvider.dispose();
	}

}
