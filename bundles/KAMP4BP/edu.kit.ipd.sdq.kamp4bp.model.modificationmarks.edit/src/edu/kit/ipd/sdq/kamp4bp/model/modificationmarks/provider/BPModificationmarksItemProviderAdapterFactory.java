/**
 */
package edu.kit.ipd.sdq.kamp4bp.model.modificationmarks.provider;

import edu.kit.ipd.sdq.kamp4bp.model.modificationmarks.util.BPModificationmarksAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class BPModificationmarksItemProviderAdapterFactory extends BPModificationmarksAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public BPModificationmarksItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4bp.model.modificationmarks.BPModificationRepository} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BPModificationRepositoryItemProvider bpModificationRepositoryItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4bp.model.modificationmarks.BPModificationRepository}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBPModificationRepositoryAdapter() {
		if (bpModificationRepositoryItemProvider == null) {
			bpModificationRepositoryItemProvider = new BPModificationRepositoryItemProvider(this);
		}

		return bpModificationRepositoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4bp.model.modificationmarks.BPSeedModifications} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BPSeedModificationsItemProvider bpSeedModificationsItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4bp.model.modificationmarks.BPSeedModifications}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBPSeedModificationsAdapter() {
		if (bpSeedModificationsItemProvider == null) {
			bpSeedModificationsItemProvider = new BPSeedModificationsItemProvider(this);
		}

		return bpSeedModificationsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4bp.model.modificationmarks.BPChangePropagationDueToDataDependencies} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BPChangePropagationDueToDataDependenciesItemProvider bpChangePropagationDueToDataDependenciesItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4bp.model.modificationmarks.BPChangePropagationDueToDataDependencies}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBPChangePropagationDueToDataDependenciesAdapter() {
		if (bpChangePropagationDueToDataDependenciesItemProvider == null) {
			bpChangePropagationDueToDataDependenciesItemProvider = new BPChangePropagationDueToDataDependenciesItemProvider(this);
		}

		return bpChangePropagationDueToDataDependenciesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4bp.model.modificationmarks.BPInterBusinessProcessPropagation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BPInterBusinessProcessPropagationItemProvider bpInterBusinessProcessPropagationItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4bp.model.modificationmarks.BPInterBusinessProcessPropagation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBPInterBusinessProcessPropagationAdapter() {
		if (bpInterBusinessProcessPropagationItemProvider == null) {
			bpInterBusinessProcessPropagationItemProvider = new BPInterBusinessProcessPropagationItemProvider(this);
		}

		return bpInterBusinessProcessPropagationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4bp.model.modificationmarks.BPModifyDataObject} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BPModifyDataObjectItemProvider bpModifyDataObjectItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4bp.model.modificationmarks.BPModifyDataObject}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBPModifyDataObjectAdapter() {
		if (bpModifyDataObjectItemProvider == null) {
			bpModifyDataObjectItemProvider = new BPModifyDataObjectItemProvider(this);
		}

		return bpModifyDataObjectItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4bp.model.modificationmarks.BPModifyAbstractUserAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BPModifyAbstractUserActionItemProvider bpModifyAbstractUserActionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4bp.model.modificationmarks.BPModifyAbstractUserAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBPModifyAbstractUserActionAdapter() {
		if (bpModifyAbstractUserActionItemProvider == null) {
			bpModifyAbstractUserActionItemProvider = new BPModifyAbstractUserActionItemProvider(this);
		}

		return bpModifyAbstractUserActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4bp.model.modificationmarks.BPModifyAcquireDeviceResourceAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BPModifyAcquireDeviceResourceActionItemProvider bpModifyAcquireDeviceResourceActionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4bp.model.modificationmarks.BPModifyAcquireDeviceResourceAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBPModifyAcquireDeviceResourceActionAdapter() {
		if (bpModifyAcquireDeviceResourceActionItemProvider == null) {
			bpModifyAcquireDeviceResourceActionItemProvider = new BPModifyAcquireDeviceResourceActionItemProvider(this);
		}

		return bpModifyAcquireDeviceResourceActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4bp.model.modificationmarks.BPModifyReleaseDeviceResourceAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BPModifyReleaseDeviceResourceActionItemProvider bpModifyReleaseDeviceResourceActionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4bp.model.modificationmarks.BPModifyReleaseDeviceResourceAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBPModifyReleaseDeviceResourceActionAdapter() {
		if (bpModifyReleaseDeviceResourceActionItemProvider == null) {
			bpModifyReleaseDeviceResourceActionItemProvider = new BPModifyReleaseDeviceResourceActionItemProvider(this);
		}

		return bpModifyReleaseDeviceResourceActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4bp.model.modificationmarks.BPModifyActorStep} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BPModifyActorStepItemProvider bpModifyActorStepItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4bp.model.modificationmarks.BPModifyActorStep}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBPModifyActorStepAdapter() {
		if (bpModifyActorStepItemProvider == null) {
			bpModifyActorStepItemProvider = new BPModifyActorStepItemProvider(this);
		}

		return bpModifyActorStepItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4bp.model.modificationmarks.BPModifyEntryLevelSystemCall} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BPModifyEntryLevelSystemCallItemProvider bpModifyEntryLevelSystemCallItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4bp.model.modificationmarks.BPModifyEntryLevelSystemCall}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBPModifyEntryLevelSystemCallAdapter() {
		if (bpModifyEntryLevelSystemCallItemProvider == null) {
			bpModifyEntryLevelSystemCallItemProvider = new BPModifyEntryLevelSystemCallItemProvider(this);
		}

		return bpModifyEntryLevelSystemCallItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4bp.model.modificationmarks.BPModifyDeviceResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BPModifyDeviceResourceItemProvider bpModifyDeviceResourceItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4bp.model.modificationmarks.BPModifyDeviceResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBPModifyDeviceResourceAdapter() {
		if (bpModifyDeviceResourceItemProvider == null) {
			bpModifyDeviceResourceItemProvider = new BPModifyDeviceResourceItemProvider(this);
		}

		return bpModifyDeviceResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.kamp4bp.model.modificationmarks.BPModifyRole} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BPModifyRoleItemProvider bpModifyRoleItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.kamp4bp.model.modificationmarks.BPModifyRole}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBPModifyRoleAdapter() {
		if (bpModifyRoleItemProvider == null) {
			bpModifyRoleItemProvider = new BPModifyRoleItemProvider(this);
		}

		return bpModifyRoleItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (bpModificationRepositoryItemProvider != null) bpModificationRepositoryItemProvider.dispose();
		if (bpSeedModificationsItemProvider != null) bpSeedModificationsItemProvider.dispose();
		if (bpChangePropagationDueToDataDependenciesItemProvider != null) bpChangePropagationDueToDataDependenciesItemProvider.dispose();
		if (bpInterBusinessProcessPropagationItemProvider != null) bpInterBusinessProcessPropagationItemProvider.dispose();
		if (bpModifyDataObjectItemProvider != null) bpModifyDataObjectItemProvider.dispose();
		if (bpModifyAbstractUserActionItemProvider != null) bpModifyAbstractUserActionItemProvider.dispose();
		if (bpModifyAcquireDeviceResourceActionItemProvider != null) bpModifyAcquireDeviceResourceActionItemProvider.dispose();
		if (bpModifyReleaseDeviceResourceActionItemProvider != null) bpModifyReleaseDeviceResourceActionItemProvider.dispose();
		if (bpModifyActorStepItemProvider != null) bpModifyActorStepItemProvider.dispose();
		if (bpModifyEntryLevelSystemCallItemProvider != null) bpModifyEntryLevelSystemCallItemProvider.dispose();
		if (bpModifyDeviceResourceItemProvider != null) bpModifyDeviceResourceItemProvider.dispose();
		if (bpModifyRoleItemProvider != null) bpModifyRoleItemProvider.dispose();
	}

}
